# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master
- develop

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '3.1.x'
    includePreviewVersions: false
- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: custom
    packagesToPack: 'src/Sannel.House.Base.Models/Sannel.House.Base.Models.csproj'
    custom: restore
    arguments: '--configfile .nuget/nuget.config'
    feedsToUse: config
    nugetConfigPath: .nuget/nuget.config
#    externalFeedCredentials: 'Sannel Github Read'
- task: DotNetCoreCLI@2
  displayName: 'dotnet publish'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: 'src/Sannel.House.Base.Models/Sannel.House.Base.Models.cspro'
    arguments: '-o $(Build.StagingDirectory)/netstandard2.0 -f netstandard2.0'
    zipAfterPublish: false
- task: DotNetCoreCLI@2
  displayName: 'dotnet publish'
  inputs:
    command: publish
    publishWebProjects: false
    projects: 'src/Sannel.House.Base.Models/Sannel.House.Base.Models.cspro'
    arguments: '-o $(Build.StagingDirectory)/netstandard2.1 -f netstandard2.1'
    zipAfterPublish: false
- task: DotNetCoreCLI@2
  displayName: 'dotnet publish'
  inputs:
    command: publish
    publishWebProjects: false
    projects: 'src/Sannel.House.Base.Models/Sannel.House.Base.Models.cspro'
    arguments: '-o $(Build.StagingDirectory)/netcoreapp3.1 -f netcoreapp3.1'
    zipAfterPublish: false
- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    projects: '**/*Tests.csproj'
    command: test
    arguments: '--collect "Code coverage"'
    publishTestResults: true
- task: DotNetCoreCLI@2
  displayName: 'dotnet pack Release'
  inputs:
    command: 'pack'
    feedsToUse: 'select'
    packagesToPack: 'src/Sannel.House.Base.Models/Sannel.House.Base.Models.csproj'
    configuration: 'Release'
    versioningScheme: 'off'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
- task: DotNetCoreCLI@2
  displayName: 'dotnet pack Debug'
  inputs:
    command: 'pack'
    feedsToUse: 'select'
    packagesToPack: 'src/Sannel.House.Base.Models/Sannel.House.Base.Models.csproj'
    configuration: 'Debug'
    versioningScheme: 'off'
  condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/master'))
- task: PublishPipelineArtifact@0
  displayName: 'Publish Pipeline Artifact'
  inputs:
    artifactName: 'packages-source'
    targetPath: '$(Build.StagingDirectory)'
